/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUMBER 1
#define SYMBOL 2

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
                &mt ESC Q       &kp W           &kp E           &kp R           &kp T           &kp Y           &kp U           &kp I           &kp O           &kp P
                &hm LCTRL A     &kp S           &hm LALT D      &hm LSHFT F     &kp G           &kp H           &hm RSHFT J     &hm RALT K      &kp L           &kp SEMI
                &kp Z           &kp X           &kp C           &kp V           &kp B           &kp N           &kp M           &coma_semi      &dot_colon      &slash_bck 
                                                &mt LGUI TAB    &mo NUMBER      &kp BSPC        &kp SPACE       &mo SYMBOL      &mt RGUI ENTER
            >;
        };

        number {
            bindings = <
                &mt ESC Q       &kp W           &kp E           &kp R           &kp T           &kp Y           &kp U           &kp I           &kp O           &kp P
                &hm LCTRL A     &kp S           &hm LALT D      &hm LSHFT F     &kp G           &kp H           &hm RSHFT J     &hm RALT K      &kp L           &kp SEMI
                &kp Z           &kp X           &kp C           &kp V           &kp B           &kp N           &kp M           &coma_semi      &dot_colon      &slash_bck 
                                                &mt LGUI TAB    &mo NUMBER      &kp BSPC        &kp SPACE       &mo SYMBOL      &mt RGUI ENTER
            >;
        };

        symbol {
            bindings = <
                &mt ESC Q       &kp W           &kp E           &kp R           &kp T           &kp Y           &kp U           &kp I           &kp O           &kp P
                &hm LCTRL A     &kp S           &hm LALT D      &hm LSHFT F     &kp G           &kp H           &hm RSHFT J     &hm RALT K      &kp L           &kp SEMI
                &kp Z           &kp X           &kp C           &kp V           &kp B           &kp N           &kp M           &coma_semi      &dot_colon      &slash_bck 
                                                &mt LGUI TAB    &mo NUMBER      &kp BSPC        &kp SPACE       &mo SYMBOL      &mt RGUI ENTER
            >;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        slash_bck: slash_bck {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH_BCK";
            bindings = <&kp SLASH>, <&kp BACKSLASH>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        coma_semi: coma_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "COMA_SEMI";
            bindings = <&kp COMMA>, <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_colon: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COLON";
            bindings = <&kp PERIOD>, <&kp COLON>, <&kp LA(COLON)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};